Rendering HTML to JS

- npm create vite@latest > ~ > npm run dev
- jxs 파일: js 안의 html 안의 js ...
- import React from "react"			/ compiler 가 html -> js
- {} = interpret html to js expression, but statement
	<h1>Hello {name+"_ "+comment}</h1>
    	<h1>Hello {`${name}, ${comment}`}</h1>
- className="~"					/ specifying jsx file
- jxs attribute 는 camelCase			/ html 은 no camelcase
- <h1 style = {{color: "red"}}>			/ string 대신 js Object which is {}, and html 에서 js 표현하려면 {}
	inline 스타일링 사용할때: css object value 를 자주 바꿔야할때

- component: really reusable & allow us to split up large file into smaller components
	<FunctionName />			/ component tag
- component로 나누는법
	1.jsx 파일 생성
	2.import React from "react"
	3.export default FunctionName		/ component 함수 생성후
	4.main 파일로 돌아와서 import FunctionName from "./~.jsx"			/확장자는 optional

- Props
	html 태그와 attribute 는 하나의 object 같다 ex) input.placeholder		/ 이떄 placeholder 는 Prop 의 key
	render 함수의 component 태그에서 attribute 설정 > component 함수의 argument 로 attribute 정보가담긴 props 받음 > 컴포넌트 html 에서 {props.placeholder} 
	className 도 component 태그의 attribute 가 될수있음
-ReactDeveloperTool: react 의 DOM tree (구조) 를 볼수있음 > rendered by, 건네받은 props의  attribute info 볼수있음
-Data 가담긴 array.property 를 component 의 attribute 로 담을때
	name={data[0].name}			/이런식으로 Array of object 에서 하나씩 노가다로 꺼내기보다는
	data.map(createCard)			/매핑으로 콜백함수 사용해 object 에있는 property 들 한번에 변수에 할당
 	콜백함수에 key={data.id}			/유니크한 property 가 필요함. 그냥 리액트 rule임